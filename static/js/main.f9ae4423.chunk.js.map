{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","services/helpers.ts","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","cn","TodoList","todos","map","usersFromServer","find","getNewTodoId","Math","max","App","useState","todosFromServer","setTodos","setTitle","setUserId","hasTitleError","setHasTitleError","hasUserError","setHasUserError","onSubmit","event","preventDefault","newTodo","currentTodos","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9ae4423.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../services/user';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={user.email}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../services/todo';\nimport { User } from '../../services/user';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n  user: User | undefined,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo, user }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { getUserById } from '../../services/helpers';\nimport { Todo } from '../../services/todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          user={getUserById(todo.userId)}\n          key={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","import usersFromServer from '../api/users';\n\nexport function getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId);\n}\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './services/todo';\n\nfunction getNewTodoId(todos: Todo[]): number {\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  return maxId + 1;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosFromServer);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n    setHasTitleError(false);\n    setHasUserError(false);\n  };\n\n  const submitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: getNewTodoId(todos),\n      title,\n      completed: false,\n      userId,\n    };\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n    reset();\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={submitHandler}>\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n\n          <input\n            type=\"text\"\n            id=\"title\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            value={userId}\n            onChange={handleUserChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todos}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}